openapi: "3.0.2"
info:
  title: "UEC Map API"
  version: "1.0.0"
  description: |-
    This is the OpenAPI definition that conforms to the standard "OGC API - Features - Part 1: Core".
    We provide the map data of the University of Electro-Communications (UEC) in Tokyo, Japan.
  license:
    name: MIT Lisence
    url: "https://github.com/uec23/uec-map/blob/main/LICENSE"
servers:
  - url: "https://map.uec-tech.net/ogc"
    description: Production server
  - url: "http://localhost:3000/ogc"
    description: Local server
components:
  parameters:
    formatParam:
      in: query
      name: f
      schema:
        type: string
        default: json
        enum:
          - html
          - json
      description: |-
        The format of the response. The default format is GeoJSON.
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
        enum:
          - all
    offset:
      name: offset
      in: query
      description: |-
        The offset parameter is used with the limit parameter to
        paginate responses. The offset parameter is an integer identifying
        the index of the first item to be returned in the response.
        The default value is 0.
      schema:
        type: integer
        minimum: 0
        default: 0
      required: false
      style: form
      explode: false
  responses:
    NotFound:
      description: |-
        The requested resource does not exist on the server. For example, a path parameter had an incorrect value.
      content:
        application/json:
          schema:
            $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/schemas/exception"
        text/html:
          schema:
            type: string
tags:
  - name: Capabilities
    description: |-
      essential characteristics of this API
  - name: Data
    description: |-
      access to data (features)
paths:
  "/":
    get:
      tags:
        - Capabilities
      summary: landing page
      description: |-
        The landing page provides links to the API definition,
        the conformance statements and to the feature collections in this dataset.
      operationId: getLandingPage
      parameters:
        - $ref: "#/components/parameters/formatParam"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
  "/conformance":
    get:
      tags:
        - Capabilities
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      parameters:
        - $ref: "#/components/parameters/formatParam"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
  "/collections":
    get:
      tags:
        - Capabilities
      summary: the feature collections in the dataset
      operationId: getCollections
      parameters:
        - $ref: "#/components/parameters/formatParam"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collections"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
  "/collections/{collectionId}":
    get:
      tags:
        - Capabilities
      summary: |-
        describe the feature collection with id `collectionId`
      operationId: describeCollection
      parameters:
        - $ref: "#/components/parameters/formatParam"
        - $ref: "#/components/parameters/collectionId"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
  "/collections/{collectionId}/items":
    get:
      tags:
        - Data
      summary: fetch features
      description: |-
        Fetch features of the feature collection with id `collectionId`.

        Every feature in a dataset belongs to a collection. A dataset may
        consist of multiple feature collections. A feature collection is often a
        collection of features of a similar type, based on a common schema.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getFeatures
      parameters:
        - $ref: "#/components/parameters/formatParam"
        - $ref: "#/components/parameters/collectionId"
        - $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit"
        - $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/bbox"
        - $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime"
        - $ref: "#/components/parameters/offset"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features"
        "400":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
  "/collections/{collectionId}/items/{featureId}":
    get:
      tags:
        - Data
      summary: fetch a single feature
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `collectionId`.

        Use content negotiation to request HTML or GeoJSON.
      operationId: getFeature
      parameters:
        - $ref: "#/components/parameters/formatParam"
        - $ref: "#/components/parameters/collectionId"
        - $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId"
      responses:
        "200":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"

